package com.example.fooddeliveryaut.config;

import lombok.Data;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

/**
 * üó∫Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Mapbox Geocoding API
 */
@Data
@Configuration
@ConfigurationProperties(prefix = "mapbox")
public class MapboxConfigProperties {

    /**
     * üîë –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∫ Mapbox API
     */
    private Access access = new Access();

    /**
     * üåç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    private Geocoding geocoding = new Geocoding();

    @Data
    public static class Access {
        /**
         * –û—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
         */
        private String token;
    }

    @Data
    public static class Geocoding {
        /**
         * –õ–∏–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
         */
        private Integer limit = 1;

        /**
         * –¢–∏–ø—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (address, poi, etc.)
         */
        private String types = "address,poi";

        /**
         * –ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
         */
        private String country = "RU";

        /**
         * –¢–∞–π–º-–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–º—Å)
         */
        private Integer connectionTimeout = 5000;

        /**
         * –¢–∞–π–º-–∞—É—Ç —á—Ç–µ–Ω–∏—è (–º—Å)
         */
        private Integer readTimeout = 10000;

        /**
         * –í–∫–ª—é—á–µ–Ω–æ –ª–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
         */
        private Boolean enabled = true;
    }

    // === UTILITY –ú–ï–¢–û–î–´ ===

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
     */
    public boolean hasValidToken() {
        return access.token != null &&
                !access.token.trim().isEmpty() &&
                access.token.startsWith("pk.");
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ URL –¥–ª—è –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    public String getGeocodingUrl() {
        return "https://api.mapbox.com/geocoding/v5/mapbox.places";
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è URL
     */
    public String getDefaultParams() {
        StringBuilder params = new StringBuilder();
        params.append("access_token=").append(access.token);
        params.append("&limit=").append(geocoding.limit);
        params.append("&types=").append(geocoding.types);

        if (geocoding.country != null && !geocoding.country.isEmpty()) {
            params.append("&country=").append(geocoding.country);
        }

        return params.toString();
    }
}